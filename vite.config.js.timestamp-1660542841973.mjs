// vite.config.js
import {
  defineConfig
} from "vite";
import vue from "@vitejs/plugin-vue";
import path from "path";
import requireTransform from "vite-plugin-require-transform";
import optimizer from "vite-plugin-optimizer";
var __vite_injected_original_dirname = "D:\\electron\\electron-project";
var vite_config_default = defineConfig({
  plugins: [
    vue()
  ],
  base: process.env.ELECTRON == "true" ? "./" : "",
  optimizeDeps: {
    include: ["axios"]
  },
  define: {
    "process.env": {
      "IS_DEV ": true
    }
  },
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "src")
    }
  },
  css: {
    preprocessorOptions: {
      less: {
        javascriptEnabled: true,
        additionalData: `@import "${path.resolve(__vite_injected_original_dirname, "src/style/global.less")}";`
      }
    }
  },
  server: {
    port: 3e3,
    proxy: {
      "/api": {
        target: "http://localhost:8000",
        changeOrigin: true
      }
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxlbGVjdHJvblxcXFxlbGVjdHJvbi1wcm9qZWN0XCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJEOlxcXFxlbGVjdHJvblxcXFxlbGVjdHJvbi1wcm9qZWN0XFxcXHZpdGUuY29uZmlnLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9EOi9lbGVjdHJvbi9lbGVjdHJvbi1wcm9qZWN0L3ZpdGUuY29uZmlnLmpzXCI7aW1wb3J0IHtcbiAgZGVmaW5lQ29uZmlnXG59IGZyb20gJ3ZpdGUnXG5pbXBvcnQgdnVlIGZyb20gJ0B2aXRlanMvcGx1Z2luLXZ1ZSdcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHJlcXVpcmVUcmFuc2Zvcm0gZnJvbSAndml0ZS1wbHVnaW4tcmVxdWlyZS10cmFuc2Zvcm0nO1xuLy8gaW1wb3J0IGNvbW1vbmpzRXh0ZXJuYWxzIGZyb20gJ3ZpdGUtcGx1Z2luLWNvbW1vbmpzLWV4dGVybmFscyc7XG4vLyBpbXBvcnQgcGF0aCBmcm9tIFwicGF0aC1icm93c2VyaWZ5XCJcbmltcG9ydCBvcHRpbWl6ZXIgZnJvbSBcInZpdGUtcGx1Z2luLW9wdGltaXplclwiO1xubGV0IGdldFJlcGxhY2VyID0gKCkgPT4ge1xuICBsZXQgZXh0ZXJuYWxNb2RlbHMgPSBbXCJlbGVjdHJvblwiLCBcIm9zXCIsIFwiZnNcIiwgXCJwYXRoXCIsIFwiZXZlbnRzXCIsIFwiY2hpbGRfcHJvY2Vzc1wiLCBcImNyeXB0b1wiLCBcImh0dHBcIiwgXCJidWZmZXJcIiwgXCJ1cmxcIiwgXCJiZXR0ZXItc3FsaXRlM1wiLCBcImtuZXhcIl07XG4gIGxldCByZXN1bHQgPSB7fTtcbiAgZm9yIChsZXQgaXRlbSBvZiBleHRlcm5hbE1vZGVscykge1xuICAgIHJlc3VsdFtpdGVtXSA9ICgpID0+ICh7XG4gICAgICBmaW5kOiBuZXcgUmVnRXhwKGBeJHtpdGVtfSRgKSxcbiAgICAgIC8vIGltcG9ydCAke2l0ZW19IGZyb20gJyR7aXRlbX0nO2V4cG9ydCB7ICR7aXRlbX0gYXMgZGVmYXVsdCB9XG4gICAgICAvLyBjb2RlOiBgY29uc3QgJHtpdGVtfSA9IHJlcXVpcmUoWycke2l0ZW19J10sZnVuY3Rpb24gKCR7aXRlbX0pIHtcbiAgICAgIC8vICAgLy9mb28gaXMgbm93IGxvYWRlZC5cbiAgICAgIC8vIH0pO2V4cG9ydCB7ICR7aXRlbX0gYXMgZGVmYXVsdCB9YCxcbiAgICAgIGNvZGU6IGBjb25zdCAke2l0ZW19ID0gcmVxdWlyZSgnJHtpdGVtfScpO2V4cG9ydCB7ICR7aXRlbX0gYXMgZGVmYXVsdCB9YCxcbiAgICAgIC8vIHJlcGxhY2VtZW50OiBgbm9kZV9tb2R1bGVzLy52aXRlLXBsdWdpbi1vcHRpbWl6ZXIvJHtpdGVtfS5qc2AsXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICBwbHVnaW5zOiBbXG4gICAgdnVlKCksXG4gICAgLy8gcmVxdWlyZVRyYW5zZm9ybSh7XG4gICAgLy8gICBmaWxlUmVnZXg6IC8uanMkfC52dWUkL1xuICAgIC8vIH0pLFxuICAgIC8vIG9wdGltaXplcihnZXRSZXBsYWNlcigpKSxcbiAgXSxcbiAgYmFzZTogcHJvY2Vzcy5lbnYuRUxFQ1RST04gPT0gXCJ0cnVlXCIgPyAnLi8nIDogXCJcIixcbiAgb3B0aW1pemVEZXBzOiB7XG4gICAgaW5jbHVkZTogWydheGlvcyddLFxuICB9LFxuICBkZWZpbmU6IHtcbiAgICAncHJvY2Vzcy5lbnYnOiB7XG4gICAgICAnSVNfREVWICc6IHRydWVcbiAgICB9XG4gIH0sXG4gIHJlc29sdmU6IHtcbiAgICBhbGlhczoge1xuICAgICAgLy9cdTUyMkJcdTU0MERcdTkxNERcdTdGNkVcbiAgICAgIFwiQFwiOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBcInNyY1wiKSwgLy9cdTkxNERcdTdGNkVzcmNcdTc2ODRcdTUyMkJcdTU0MERcbiAgICB9LFxuICB9LFxuXG4gIGNzczoge1xuICAgIHByZXByb2Nlc3Nvck9wdGlvbnM6IHtcbiAgICAgIGxlc3M6IHtcbiAgICAgICAgamF2YXNjcmlwdEVuYWJsZWQ6IHRydWUsXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBgQGltcG9ydCBcIiR7cGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJ3NyYy9zdHlsZS9nbG9iYWwubGVzcycpfVwiO2BcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcblxuICBzZXJ2ZXI6IHtcbiAgICBwb3J0OiAzMDAwLFxuICAgIHByb3h5OiB7XG4gICAgICAnL2FwaSc6IHsgLy9cdTZCNjRcdTU5MDQvYXBpc1x1NUU3Nlx1NEUwRFx1OTcwMFx1ODk4MVx1NEZERFx1NjMwMVx1NEUwMFx1ODFGNC5cbiAgICAgICAgLy8gXHU2RDRCXHU4QkQ1XHU3M0FGXHU1ODgzXG4gICAgICAgIHRhcmdldDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMCcsIC8vIFx1NjNBNVx1NTNFM1x1NTdERlx1NTQwRFxuICAgICAgICBjaGFuZ2VPcmlnaW46IHRydWUsIC8vXHU2NjJGXHU1NDI2XHU4REU4XHU1N0RGXG4gICAgICB9XG4gICAgfSxcbiAgfSxcbn0pIl0sCiAgIm1hcHBpbmdzIjogIjtBQUE0UTtBQUFBLEVBQzFRO0FBQUEsT0FDSztBQUNQLE9BQU8sU0FBUztBQUNoQixPQUFPLFVBQVU7QUFDakIsT0FBTyxzQkFBc0I7QUFHN0IsT0FBTyxlQUFlO0FBUnRCLElBQU0sbUNBQW1DO0FBeUJ6QyxJQUFPLHNCQUFRLGFBQWE7QUFBQSxFQUMxQixTQUFTO0FBQUEsSUFDUCxJQUFJO0FBQUEsRUFLTjtBQUFBLEVBQ0EsTUFBTSxRQUFRLElBQUksWUFBWSxTQUFTLE9BQU87QUFBQSxFQUM5QyxjQUFjO0FBQUEsSUFDWixTQUFTLENBQUMsT0FBTztBQUFBLEVBQ25CO0FBQUEsRUFDQSxRQUFRO0FBQUEsSUFDTixlQUFlO0FBQUEsTUFDYixXQUFXO0FBQUEsSUFDYjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxNQUVMLEtBQUssS0FBSyxRQUFRLGtDQUFXLEtBQUs7QUFBQSxJQUNwQztBQUFBLEVBQ0Y7QUFBQSxFQUVBLEtBQUs7QUFBQSxJQUNILHFCQUFxQjtBQUFBLE1BQ25CLE1BQU07QUFBQSxRQUNKLG1CQUFtQjtBQUFBLFFBQ25CLGdCQUFnQixZQUFZLEtBQUssUUFBUSxrQ0FBVyx1QkFBdUI7QUFBQSxNQUM3RTtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFFQSxRQUFRO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixPQUFPO0FBQUEsTUFDTCxRQUFRO0FBQUEsUUFFTixRQUFRO0FBQUEsUUFDUixjQUFjO0FBQUEsTUFDaEI7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
